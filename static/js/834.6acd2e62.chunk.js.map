{"version":3,"file":"static/js/834.6acd2e62.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/charSearchForm/CharSearchForm.js","components/pages/MainPage.js","services/MarvelService.js","hooks/http.hooks.js"],"sourcesContent":["import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: \"block\",\n        width: \"250px\",\n        height: \"250px\",\n        objectFit: \"contain\",\n        margin: \"0 auto\",\n      }}\n      src={img}\n      alt=\"error\"\n    />\n  );\n};\nexport default ErrorMessage;\n","import \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\n\nconst RandomChar = () => {\n  const [char, setChar] = useState(null);\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n\n    return () => {\n      clearInterval(timerId);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n    getCharacter(id).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button onClick={updateChar} className=\"button button__main\">\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={imgStyle}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import \"./charList.scss\";\nimport { useState, useEffect, useRef } from \"react\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\n\nconst CharList = (props) => {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  const { loading, error, getAllCharacters } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset).then(onCharListLoaded);\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList((charList) => [...charList, ...newCharList]);\n\n    setNewItemLoading((newItemLoading) => false);\n    setOffset((offset) => offset + 9);\n    setCharEnded((charEnded) => ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li\n          className=\"char__item\"\n          tabIndex={0}\n          ref={(el) => (itemRefs.current[i] = el)}\n          key={item.id}\n          onClick={() => {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \" \" || e.key === \"Enter\") {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import \"./charInfo.scss\";\nimport { useState, useEffect } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    // eslint-disable-next-line\n  }, [props.charId]);\n\n  const updateChar = () => {\n    if (!props.charId) {\n      return;\n    }\n    clearError();\n    getCharacter(props.charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const content = !(loading || error || !char) ? <Char char={char} /> : null;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {content}\n      {errorMessage}\n      {spinner}\n    </div>\n  );\n};\n\nconst Char = ({ char }) => {\n  const imgStyle =\n    char.thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ? { objectFit: \"fill\" }\n      : null;\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={char.thumbnail} alt={char.name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{char.name}</div>\n          <div className=\"char__btns\">\n            <a href={char.homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={char.wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{char.description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {char.comics.length > 0\n          ? null\n          : \"There is no comics with this character\"}\n        {char.comics.map((item, i) => {\n          // eslint-disable-next-line\n          if (i > 9) return;\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default CharInfo;\n","import { Component } from \"react\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import \"./charSearchForm.scss\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Formik,\n  Form,\n  Field,\n  ErrorMessage as FormikErrorMessage,\n} from \"formik\";\n\nimport * as Yup from \"yup\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport { useState } from \"react\";\n\nconst CharSearchForm = () => {\n  const { loading, error, getCharByName, clearError } = useMarvelService();\n  const [char, setChar] = useState(null);\n\n  const updateChar = (name) => {\n    clearError();\n    getCharByName(name).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const errorMessage = error ? (\n    <div className=\"char__search-critical-error\">\n      <FormikErrorMessage />\n    </div>\n  ) : null;\n\n  const results = !char ? null : char.length > 0 ? (\n    <div className=\"char__search-wrapper\">\n      <div className=\"char__search-success\">\n        There is! Visit {char[0].name} page?\n      </div>\n      <Link\n        to={`/characters/${char[0].id}`}\n        className=\"button button__secondary\"\n      >\n        <div className=\"inner\">To page</div>\n      </Link>\n    </div>\n  ) : (\n    <div className=\"char__search-error\">\n      The character was not found. Check the name and try again\n    </div>\n  );\n\n  return (\n    <div className=\"char__search-form\">\n      <Formik\n        initialValues={{ charName: \"\" }}\n        validationSchema={Yup.object({\n          charName: Yup.string()\n            .required(\"Enter the name\")\n            .min(2, \"Enter minimum 2 simbols\"),\n        })}\n        onSubmit={({ charName }) => updateChar(charName)}\n      >\n        <Form>\n          <label className=\"char__search-label\" htmlFor=\"charName\">\n            Or find a character by name:\n          </label>\n          <div className=\"char__search-wrapper\">\n            <Field\n              id=\"charName\"\n              name=\"charName\"\n              type=\"text\"\n              placeholder=\"Enter name\"\n            />\n\n            <button\n              type=\"submit\"\n              className=\"button button__main\"\n              disabled={loading}\n            >\n              <div className=\"inner\">find</div>\n            </button>\n          </div>\n          <FormikErrorMessage\n            component=\"div\"\n            className=\"char__search-error\"\n            name=\"charName\"\n          />\n        </Form>\n      </Formik>\n      {results}\n      {errorMessage}\n    </div>\n  );\n};\n\nexport default CharSearchForm;\n","import RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport decoration from \"../../resources/img/vision.png\";\nimport { useState } from \"react\";\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\nimport Helmet from \"react-helmet\";\n\nconst MainPage = () => {\n  const [selectedChar, setSelectedChar] = useState(null);\n\n  const onCharSelected = (id) => {\n    setSelectedChar(id);\n  };\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content=\"Marvel information portal\" />\n        <title>Marvel information portal</title>\n      </Helmet>\n      <ErrorBoundary>\n        <RandomChar />\n      </ErrorBoundary>\n      <div className=\"char__content\">\n        <ErrorBoundary>\n          <CharList onCharSelected={onCharSelected} />\n        </ErrorBoundary>\n        <div>\n          <ErrorBoundary>\n            <CharInfo charId={selectedChar} />\n          </ErrorBoundary>\n          <ErrorBoundary>\n            <CharSearchForm />\n          </ErrorBoundary>\n        </div>\n      </div>\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n    </>\n  );\n};\n\nexport default MainPage;\n","import { useHttp } from \"../hooks/http.hooks\";\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n  const _basis = \"https://gateway.marvel.com:443/v1/public/characters\";\n  const _apiKey = \"apikey=7aee92fdbe4f8e13d3e13670a06c2326\";\n  const _basisComics = \"https://gateway.marvel.com:443/v1/public/comics\";\n\n  const _offset = 210;\n\n  const getAllCharacters = async (offset = _offset) => {\n    const res = await request(`${_basis}?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_basis}/${id}?&${_apiKey}`);\n\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComics = async (offset = _offset) => {\n    const res = await request(\n      `${_basisComics}?limit=8&offset=${offset}&${_apiKey}`\n    );\n\n    return res.data.results.map(_transformComics);\n  };\n\n  const getSingleComic = async (id) => {\n    const res = await request(`${_basisComics}/${id}?${_apiKey}`);\n\n    return _transformComics(res.data.results[0]);\n  };\n\n  const getCharByName = async (name) => {\n    const res = await request(`${_basis}?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const _transformComics = (comics) => {\n    return {\n      id: comics.id,\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      issueNumber: comics.issueNumber,\n      title: comics.title,\n      price: comics.prices[0].price,\n      url: comics.urls[0].url,\n      description: comics.description || \"There is not description\",\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : \"No information about the number of pages\",\n      language: comics.textObjects.language || \"en-us\",\n    };\n  };\n\n  const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : \"There is no description for this character\",\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacter,\n    clearError,\n    getAllComics,\n    getSingleComic,\n    getCharByName,\n  };\n};\nexport default useMarvelService;\n","import { useCallback, useState } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-Type\": \"application/json\" }\n    ) => {\n      setLoading(true);\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url} status:${response.status}`);\n        }\n\n        const data = response.json();\n\n        setLoading(false);\n        return data;\n      } catch (e) {\n        setLoading(true);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n  return { loading, request, error, clearError };\n};\n"],"names":["style","display","width","height","objectFit","margin","src","img","alt","View","char","name","description","thumbnail","homepage","wiki","imgStyle","className","href","useState","setChar","useMarvelService","loading","error","getCharacter","clearError","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","id","Math","floor","random","then","errorMessage","ErrorMessage","spinner","Spinner","content","onClick","mjolnir","props","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","items","arr","map","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Char","comics","charId","skeleton","ErrorBoundary","state","errorInfo","this","setState","children","Component","getCharByName","results","to","initialValues","charName","validationSchema","Yup","required","min","onSubmit","htmlFor","type","placeholder","component","selectedChar","setSelectedChar","Helmet","decoration","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","data","json","message","useHttp","_basis","_apiKey","_basisComics","_offset","res","_transformCharacter","getAllComics","_transformComics","getSingleComic","path","extension","issueNumber","title","price","prices","urls","pageCount","language","textObjects","slice"],"sourceRoot":""}