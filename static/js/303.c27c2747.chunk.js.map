{"version":3,"file":"static/js/303.c27c2747.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.js","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hooks.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: \"block\",\n        width: \"250px\",\n        height: \"250px\",\n        objectFit: \"contain\",\n        margin: \"0 auto\",\n      }}\n      src={img}\n      alt=\"error\"\n    />\n  );\n};\nexport default ErrorMessage;\n","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import \"./comicsList.scss\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\n\nconst ComicsList = (props) => {\n  const { getAllComics, loading, error } = useMarvelService();\n\n  const [offset, setOffset] = useState(210);\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    setComicsList((comicsList) => [...comicsList, ...newComicsList]);\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setNewItemLoading((newItemLoading) => false);\n    setOffset((offset) => offset + 9);\n    setComicsEnded((comicsEnded) => ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">`${item.price}$`</div>\n          </Link>\n        </li>\n      );\n    });\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(comicsList);\n  const spinner = loading && !newItemLoading && !error ? <Spinner /> : null;\n  const errorMessage = error ? <ErrorMessage /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {items}\n      {spinner}\n      {errorMessage}\n      <button\n        className=\"button button__main button__long\"\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        disabled={newItemLoading}\n      >\n        <div className=\"inner\" onClick={() => onRequest(offset)}>\n          load more\n        </div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/ComicsList\";\nimport Helmet from \"react-helmet\";\n\nconst ComicsPage = () => {\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content=\"Page widhh list of our comics\" />\n        <title>Comics page</title>\n      </Helmet>\n      <AppBanner />\n      <ComicsList />\n    </>\n  );\n};\n\nexport default ComicsPage;\n","import { useHttp } from \"../hooks/http.hooks\";\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n  const _basis = \"https://gateway.marvel.com:443/v1/public/characters\";\n  const _apiKey = \"apikey=7aee92fdbe4f8e13d3e13670a06c2326\";\n  const _basisComics = \"https://gateway.marvel.com:443/v1/public/comics\";\n\n  const _offset = 210;\n\n  const getAllCharacters = async (offset = _offset) => {\n    const res = await request(`${_basis}?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_basis}/${id}?&${_apiKey}`);\n\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComics = async (offset = _offset) => {\n    const res = await request(\n      `${_basisComics}?limit=8&offset=${offset}&${_apiKey}`\n    );\n\n    return res.data.results.map(_transformComics);\n  };\n\n  const getSingleComic = async (id) => {\n    const res = await request(`${_basisComics}/${id}?${_apiKey}`);\n\n    return _transformComics(res.data.results[0]);\n  };\n\n  const getCharByName = async (name) => {\n    const res = await request(`${_basis}?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const _transformComics = (comics) => {\n    return {\n      id: comics.id,\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      issueNumber: comics.issueNumber,\n      title: comics.title,\n      price: comics.prices[0].price,\n      url: comics.urls[0].url,\n      description: comics.description || \"There is not description\",\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : \"No information about the number of pages\",\n      language: comics.textObjects.language || \"en-us\",\n    };\n  };\n\n  const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : \"There is no description for this character\",\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacter,\n    clearError,\n    getAllComics,\n    getSingleComic,\n    getCharByName,\n  };\n};\nexport default useMarvelService;\n","import { useCallback, useState } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-Type\": \"application/json\" }\n    ) => {\n      setLoading(true);\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url} status:${response.status}`);\n        }\n\n        const data = response.json();\n\n        setLoading(false);\n        return data;\n      } catch (e) {\n        setLoading(true);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n  return { loading, request, error, clearError };\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["style","display","width","height","objectFit","margin","src","img","alt","className","avengers","avengersLogo","props","useMarvelService","getAllComics","loading","error","useState","offset","setOffset","comicsList","setComicsList","newItemLoading","setNewItemLoading","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","to","id","thumbnail","title","price","renderItems","spinner","Spinner","errorMessage","ErrorMessage","disabled","onClick","Helmet","name","content","AppBanner","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","data","json","message","clearError","useHttp","_basis","_apiKey","_basisComics","_offset","getAllCharacters","res","results","_transformCharacter","getCharacter","_transformComics","getSingleComic","getCharByName","comics","path","extension","issueNumber","prices","urls","description","pageCount","language","textObjects","char","slice","homepage","wiki","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}